apiVersion: apps/v1
kind: Deployment
metadata:
  name: cbc-api
  namespace: cbc-omega-squared
  labels:
    app: cbc-api
spec:
  replicas: 2
  selector:
    matchLabels:
      app: cbc-api
  template:
    metadata:
      labels:
        app: cbc-api
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8000"
        prometheus.io/path: "/metrics"
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
      containers:
      - name: api
        image: cbc-omega-squared:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8000
          name: http
        env:
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: cbc-secrets
              key: JWT_SECRET
        - name: NUM_PARTICLES
          valueFrom:
            configMapKeyRef:
              name: cbc-config
              key: NUM_PARTICLES
        - name: NUM_SIMULATIONS
          valueFrom:
            configMapKeyRef:
              name: cbc-config
              key: NUM_SIMULATIONS
        - name: MAX_DEPTH
          valueFrom:
            configMapKeyRef:
              name: cbc-config
              key: MAX_DEPTH
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 10
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 10
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop: ["ALL"]
        volumeMounts:
        - name: tmp
          mountPath: /tmp
      volumes:
      - name: tmp
        emptyDir: {}
