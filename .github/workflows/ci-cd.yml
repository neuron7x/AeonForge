name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Install dependencies
        run: |
          pip install ruff pytest pytest-asyncio
      - name: Lint
        run: ruff check app tests
      - name: Format check
        run: ruff format --check app tests

  tests:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_USER: bot
          POSTGRES_PASSWORD: botpass
          POSTGRES_DB: botdb
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      redis:
        image: redis:7-alpine
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Install dependencies
        run: pip install -r requirements.txt
      - name: Run tests
        env:
          DATABASE_URL: postgresql+asyncpg://bot:botpass@localhost:5432/botdb
          REDIS_URL: redis://localhost:6379/0
          BOT_TOKEN: test
          WEBHOOK_BASE_URL: https://test.example
          GITHUB_TOKEN: test
        run: pytest tests/ -v

  build:
    needs: [lint, tests]
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v2
      - name: Build Docker image
        run: docker build -t promptops-bot:${{ github.sha }} .
